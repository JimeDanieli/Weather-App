{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimed\\\\OneDrive\\\\Escritorio\\\\M2\\\\FT-M2\\\\07-React-Estilos\\\\homework\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from './components/Card.jsx';\nimport Cards from './components/Cards.jsx';\nimport SearchBar from './components/SearchBar.jsx';\n/* import data, { Cairns } from './data.js'; */\n\nimport styles from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function handleAddCity(city) {\n    setCities(prevCitites => {\n      return [city, ...prevCitites];\n    });\n  }\n\n  function handleRemoveCity(cityId) {\n    setCities(prevCitites => {\n      return prevCitites.filter(city => {\n        return cityId !== city.id;\n      });\n      /* devuelve todas las ciudades que si id no sea el del argumento */\n    });\n  }\n\n  function onSearch(ciudad) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${API_KEY}&units=metric`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        handleAddCity(ciudad);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bkg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: ciudad => alert(ciudad)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.citiesContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Cards, {\n            cities: cities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jimed/OneDrive/Escritorio/M2/FT-M2/07-React-Estilos/homework/src/App.js"],"names":["React","useState","Card","Cards","SearchBar","styles","App","cities","setCities","handleAddCity","city","prevCitites","handleRemoveCity","cityId","filter","id","onSearch","ciudad","fetch","API_KEY","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","alert","app","bkg","container","citiesContainer"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Card from './components/Card.jsx';\r\nimport Cards from './components/Cards.jsx';\r\nimport SearchBar from './components/SearchBar.jsx';\r\n/* import data, { Cairns } from './data.js'; */\r\nimport styles from './App.module.css';\r\n\r\nfunction App() {\r\n  const [cities, setCities] =useState([])\r\n   function handleAddCity(city){\r\n     setCities((prevCitites)=>{\r\n       return[city, ...prevCitites];\r\n     })\r\n   }\r\n   function handleRemoveCity(cityId){\r\n      setCities((prevCitites)=>{\r\n        return prevCitites.filter((city) =>{\r\n          return cityId !== city.id}) /* devuelve todas las ciudades que si id no sea el del argumento */\r\n      })\r\n   }\r\n   function onSearch(ciudad){\r\n   fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${API_KEY}&units=metric`)\r\n   .then(r => r.json())\r\n   .then((recurso) => {\r\n     if(recurso.main !== undefined){\r\n       const ciudad = {\r\n         min: Math.round(recurso.main.temp_min),\r\n         max: Math.round(recurso.main.temp_max),\r\n         img: recurso.weather[0].icon,\r\n         id: recurso.id,\r\n         wind: recurso.wind.speed,\r\n         temp: recurso.main.temp,\r\n         name: recurso.name,\r\n         weather: recurso.weather[0].main,\r\n         clouds: recurso.clouds.all,\r\n         latitud: recurso.coord.lat,\r\n         longitud: recurso.coord.lon\r\n       };\r\n       handleAddCity(ciudad)\r\n     } else {\r\n       alert(\"Ciudad no encontrada\");\r\n     }\r\n   });\r\n  }\r\n  return (\r\n    <div className= {styles.app}>\r\n      <div className ={styles.bkg} /> \r\n      <div className={styles.container} >\r\n\r\n        <div >\r\n        <SearchBar onSearch={(ciudad) => alert(ciudad)} />\r\n\r\n    {/*     <Card\r\n         primary\r\n          max={Cairns.main.temp_max}\r\n          min={Cairns.main.temp_min}\r\n          name={Cairns.name}\r\n          img={Cairns.weather[0].icon}\r\n          onClose={() => alert(Cairns.name)} />  */}\r\n\r\n        </div> \r\n            <div className= {styles.citiesContainer}>\r\n          <div>\r\n          <Cards cities={cities} />\r\n           </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}